@prefix as: <https://www.w3.org/ns/activitystreams#> .
@prefix bibo: <http://purl.org/ontology/bibo/> .
@prefix bibtex: <http://purl.org/net/nknouf/ns/bibtex#> .
@prefix dct: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<https://natanael.arndt.xyz/bib/arndt-n-2019--qeicc> a bibtex:InProceedings ;
    dct:abstract """The Semantic Web is about collaboration and exchange of information.
While the data on the Semantic Web is constantly evolving and meant to be collaboratively edited there is no practical transactional concept or method to control concurrent writes to a dataset and avoid conflicts.
Thus, we follow the question, how can we ensure a controlled state of a SPARQL Store when performing non transactional write operations?
Based on the Distributed Version Control System for RDF data implemented in the Quit Store we present the Quit Editor Interface Concurrency Control (QEICC).
QEICC provides a protocol on top of the SPARQL 1.1 standard to identify, avoid, and resolve conflicts.
The strategies *reject*, *branch*, and *merge* are presented to allow different levels of control over the conflict resolution.
While the *reject* strategy gives full control to the client, with *branch* and *merge* it is even possible to postpone the conflict resolution and integrate it into the date engineering process.""" ;
    dct:creator [ a rdf:Seq ;
            rdf:_1 <http://aksw.org/NatanaelArndt> ;
            rdf:_2 <http://aksw.org/NormanRadtke> ] ;
    dct:hasFormat <https://svn.aksw.org/papers/2019/MEPDaW_QEICC/public.pdf> ;
    dct:isPartOf <https://natanael.arndt.xyz/bib/WWW2019_companion> ;
    dct:issued "2019-01-01"^^xsd:date ;
    dct:title "Conflict Detection, Avoidance, and Resolution in a Non-Linear RDF Version Control System: The Quit Editor Interface Concurrency Control" ;
    bibtex:keywords "2019 group_aksw myown quit" ;
    bibo:doi "10.1145/3308560.3316519" ;
    as:inReplyTo <https://natanael.arndt.xyz/bib/MEPDaW2019> .

